plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk rootProject.android_compile_sdk_version

    defaultConfig {
        applicationId "com.sixtassignment"
        minSdk rootProject.android_min_sdk_version
        targetSdk rootProject.android_target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        multiDexEnabled true

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.3.0"
        kotlinCompilerVersion kotlin_version
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation project(':domain')
    implementation project(':data')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.10"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "androidx.core:core-ktx:$kotlin_version"


// compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:1.2.1"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:1.2.1"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"



    // Android Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$viewmodel_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewmodel_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$viewmodel_version"
    implementation "androidx.core:core-ktx:$kotlin_version"
//mapcompose
    implementation 'com.google.maps.android:maps-compose:2.5.3'

    // Make sure to also include the latest version of the Maps SDK for Android
    implementation 'com.google.android.gms:play-services-maps:18.0.2'

    // Also include Compose version `1.2.0-alpha03` or higher - for example:
    implementation 'androidx.compose.foundation:foundation:1.2.1'

    // Optionally, you can include the widgets library if you want to use ScaleBar, etc.
    implementation 'com.google.maps.android:maps-compose-widgets:2.5.3'

    implementation "com.android.support:multidex:$multi_dex_version"
///koin


    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation"com.squareup.okhttp3:logging-interceptor:$okhttp_Logging_Version"

    implementation("io.coil-kt:coil-compose:1.4.0")
    implementation "androidx.navigation:navigation-compose:2.5.1"

    //test implementation

    // Unit tests
    // Required -- JUnit 4 framework
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "io.kotlintest:kotlintest:$kotlin_test_version"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powermock_version"
    testImplementation "org.powermock:powermock-core:$powermock_version"
    testImplementation "org.powermock:powermock-module-junit4:$powermock_version"
    testImplementation "org.powermock:powermock-api-mockito2:$powermock_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mock_webserver_version"
    testImplementation "io.insert-koin:koin-test:$koin_version"
    androidTestImplementation "io.insert-koin:koin-test:$koin_version"
// Koin for JUnit 4
    testImplementation "io.insert-koin:koin-test-junit4:$koin_version"
//
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test:rules:$test_rules_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'

}